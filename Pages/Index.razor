@page "/"
@using System.Text
@inherits IndexBack

<h1 class="pt-8">Gerador de Senhas</h1>
<MudText class="d-flex justify-left pb-8 pt-3">
    Ferramenta online para gerar senhas fortes e seguras. O gerador de senhas permite criar uma senha aleatória com diversas opções.
    Selecione as opções desejadas, clique em "Gerar Senha" e confira a senha gerada abaixo do botão.
</MudText>

<MudText>
    <h3 class="pt-8">1. Tamanho da Senha:</h3>
</MudText>

<MudItem xs="3">
    <MudNumericField @bind-Value="intValueSize" Label="Enter an int" Variant="Variant.Outlined" />
</MudItem>

<MudStack Class="pb-8 pt-8">
    <MudSwitch @bind-Value="_uppercase" Label="Incluir Letras Maiúsculas" Class="mud-width-full" Color="Color.Primary" />
    <MudSwitch @bind-Value="_lowercase" Label="Incluir Letras Minúsculas" Class="mud-width-full" Color="Color.Primary" />
    <MudSwitch @bind-Value="_number" Label="Incluir Números" Class="mud-width-full" Color="Color.Primary" />
    <MudSwitch @bind-Value="_especial" Label="Incluir Caracteres Especiais" Class="mud-width-full" Color="Color.Primary" />
</MudStack>

<MudText>
    <h3 class="pt-8">2. Número de Senhas Geradas:</h3>
</MudText>

<MudItem xs="3">
    <MudNumericField @bind-Value="intValueNumber" Label="Enter an int" Variant="Variant.Outlined" />
</MudItem>

<MudItem Class="d-flex justify-center pb-8 pt-3">
    <MudFab Color=Color.Tertiary StartIcon="@Icons.Material.Filled.Refresh" @onclick="() => GetPasswords()" Label="GERAR SENHA" />
</MudItem>

<MudItem xs="3">
    <MudTable Items="@stringResult.Take(intValueNumber)" Hover="true" Breakpoint="Breakpoint.Sm" LoadingProgressColor="Color.Primary">
        <HeaderContent>
            <MudTh>Password</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Nr">@context</MudTd>
        </RowTemplate>
    </MudTable>
</MudItem>



@code {
    int intValueSize { get; set; } = 1;
    int intValueNumber { get; set; } = 1;
    bool _uppercase;
    bool _lowercase;
    bool _number;
    bool _especial;
    List<string>? stringResult { get; set; } = new();

    void GetPasswords()
    {
        try
        {
            stringResult = IndexBack.GenerateRandomPassword(_uppercase,
                                                            _lowercase,
                                                            _number,
                                                            _especial,
                                                            intValueSize,
                                                            intValueNumber);

        }
        catch
        {
            throw;
        }
    }
}
